<style>
  .product-accordion {
    border-top: 1px solid #e1e1e1;
  }
  .accordion-item {
    border-bottom: 1px solid #e1e1e1;
  }
  .accordion-toggle {
    background: none;
    border: none;
    width: 100%;
    padding: 1rem;
    font-size: 1rem;
    text-align: left;
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    font-weight: bold;
  }
  .accordion-toggle .icon {
    width: 1rem;
    height: 1rem;
    transition: transform 0.3s ease;
  }
  .accordion-item.active .icon {
    transform: rotate(180deg);
  }
  .accordion-content {
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.4s ease;
    padding: 0 1rem;
  }
</style>

{% assign product = all_products[section.settings.product] %}

<div class="product-accordion">
  {% if product.metafields.custom.material %}
    <div class="accordion-item active">
      <button class="accordion-toggle" aria-expanded="true">
        <span>Material</span>
        <svg class="icon" viewBox="0 0 20 20">
          <path d="M5 7l5 5 5-5"></path>
        </svg>
      </button>
      <div class="accordion-content" style="max-height: 200px;">
        {{ product.metafields.custom.material | metafield_tag }}
      </div>
    </div>
  {% endif %}

  {% if product.metafields.custom.delivery %}
    <div class="accordion-item">
      <button class="accordion-toggle" aria-expanded="false">
        <span>Delivery</span>
        <svg class="icon" viewBox="0 0 20 20">
          <path d="M5 7l5 5 5-5"></path>
        </svg>
      </button>
      <div class="accordion-content">
        {{ product.metafields.custom.delivery | metafield_tag }}
      </div>
    </div>
  {% endif %}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const accordionItems = document.querySelectorAll('.accordion-item');

    accordionItems.forEach((item, index) => {
      const toggle = item.querySelector('.accordion-toggle');
      const content = item.querySelector('.accordion-content');

      // Open the first item
      if (index === 0) {
        item.classList.add('active');
        toggle.setAttribute('aria-expanded', 'true');
        content.style.maxHeight = content.scrollHeight + 'px';
      }

      toggle.addEventListener('click', () => {
        const isExpanded = toggle.getAttribute('aria-expanded') === 'true';

        // Collapse all
        accordionItems.forEach((i) => {
          i.classList.remove('active');
          i.querySelector('.accordion-toggle').setAttribute('aria-expanded', 'false');
          i.querySelector('.accordion-content').style.maxHeight = null;
        });

        // Expand clicked
        if (!isExpanded) {
          item.classList.add('active');
          toggle.setAttribute('aria-expanded', 'true');
          content.style.maxHeight = content.scrollHeight + 'px';
        }
      });
    });
  });
</script>
